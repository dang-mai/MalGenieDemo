nohup: 忽略输入
________________________________________________________________________________
two categories
count
================================================================================
MultinomialNB Naive Bayes
Training: 
MultinomialNB()
The accuracy of classifying malware in test set MultinomialNB Naive Bayes 0.8945
classification report:
              precision    recall  f1-score   support

        good       0.89      0.90      0.90      1001
     malware       0.90      0.89      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
GaussianNB
Training: 
GaussianNB()
The accuracy of classifying malware in test set GaussianNB 0.8
classification report:
              precision    recall  f1-score   support

        good       0.74      0.92      0.82      1001
     malware       0.90      0.68      0.77       999

    accuracy                           0.80      2000
   macro avg       0.82      0.80      0.80      2000
weighted avg       0.82      0.80      0.80      2000


================================================================================
BernoulliNB
Training: 
BernoulliNB()
The accuracy of classifying malware in test set BernoulliNB 0.8555
classification report:
              precision    recall  f1-score   support

        good       0.84      0.88      0.86      1001
     malware       0.87      0.83      0.85       999

    accuracy                           0.86      2000
   macro avg       0.86      0.86      0.86      2000
weighted avg       0.86      0.86      0.86      2000


================================================================================
ComplementNB
Training: 
ComplementNB()
The accuracy of classifying malware in test set ComplementNB 0.8945
classification report:
              precision    recall  f1-score   support

        good       0.89      0.90      0.90      1001
     malware       0.90      0.89      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Random forest
Training: 
RandomForestClassifier(n_jobs=10, random_state=0)
The accuracy of classifying malware in test set Random forest 0.917
classification report:
              precision    recall  f1-score   support

        good       0.95      0.89      0.91      1001
     malware       0.89      0.95      0.92       999

    accuracy                           0.92      2000
   macro avg       0.92      0.92      0.92      2000
weighted avg       0.92      0.92      0.92      2000


================================================================================
Decision Tree
Training: 
DecisionTreeClassifier()
The accuracy of classifying malware in test set Decision Tree 0.885
classification report:
              precision    recall  f1-score   support

        good       0.89      0.88      0.88      1001
     malware       0.88      0.89      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.88      2000
weighted avg       0.89      0.89      0.88      2000


================================================================================
SVC
Training: 
SVC()
The accuracy of classifying malware in test set SVC 0.9105
classification report:
              precision    recall  f1-score   support

        good       0.95      0.87      0.91      1001
     malware       0.88      0.95      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
KNN
Training: 
KNeighborsClassifier(n_jobs=10)
The accuracy of classifying malware in test set KNN 0.8505
classification report:
              precision    recall  f1-score   support

        good       0.87      0.82      0.85      1001
     malware       0.83      0.88      0.85       999

    accuracy                           0.85      2000
   macro avg       0.85      0.85      0.85      2000
weighted avg       0.85      0.85      0.85      2000


================================================================================
Logistic Regression
Training: 
LogisticRegression(n_jobs=10)
The accuracy of classifying malware in test set Logistic Regression 0.909
classification report:
              precision    recall  f1-score   support

        good       0.94      0.88      0.91      1001
     malware       0.89      0.94      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Linear Discriminant Analysis
Training: 
LinearDiscriminantAnalysis()
The accuracy of classifying malware in test set Linear Discriminant Analysis 0.864
classification report:
              precision    recall  f1-score   support

        good       0.86      0.87      0.86      1001
     malware       0.87      0.86      0.86       999

    accuracy                           0.86      2000
   macro avg       0.86      0.86      0.86      2000
weighted avg       0.86      0.86      0.86      2000


================================================================================
Bagging Classifier mnb
Training: 
BaggingClassifier(base_estimator=MultinomialNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier mnb 0.8935
classification report:
              precision    recall  f1-score   support

        good       0.89      0.90      0.89      1001
     malware       0.90      0.88      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier gnb
Training: 
BaggingClassifier(base_estimator=GaussianNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier gnb 0.8065
classification report:
              precision    recall  f1-score   support

        good       0.75      0.92      0.83      1001
     malware       0.90      0.69      0.78       999

    accuracy                           0.81      2000
   macro avg       0.82      0.81      0.80      2000
weighted avg       0.82      0.81      0.80      2000


================================================================================
Bagging Classifier bnb
Training: 
BaggingClassifier(base_estimator=BernoulliNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier bnb 0.8505
classification report:
              precision    recall  f1-score   support

        good       0.83      0.88      0.85      1001
     malware       0.87      0.82      0.85       999

    accuracy                           0.85      2000
   macro avg       0.85      0.85      0.85      2000
weighted avg       0.85      0.85      0.85      2000


================================================================================
Bagging Classifier cnb
Training: 
BaggingClassifier(base_estimator=ComplementNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier cnb 0.896
classification report:
              precision    recall  f1-score   support

        good       0.89      0.91      0.90      1001
     malware       0.90      0.89      0.89       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Bagging Classifier rf
Training: 
BaggingClassifier(base_estimator=RandomForestClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier rf 0.9165
classification report:
              precision    recall  f1-score   support

        good       0.95      0.88      0.91      1001
     malware       0.89      0.96      0.92       999

    accuracy                           0.92      2000
   macro avg       0.92      0.92      0.92      2000
weighted avg       0.92      0.92      0.92      2000


================================================================================
Bagging Classifier dt
Training: 
BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier dt 0.905
classification report:
              precision    recall  f1-score   support

        good       0.91      0.90      0.90      1001
     malware       0.90      0.91      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.90      2000
weighted avg       0.91      0.91      0.90      2000


================================================================================
Bagging Classifier svm
Training: 
BaggingClassifier(base_estimator=SVC(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier svm 0.906
classification report:
              precision    recall  f1-score   support

        good       0.93      0.88      0.90      1001
     malware       0.88      0.93      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Bagging Classifier knn
Training: 
BaggingClassifier(base_estimator=KNeighborsClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier knn 0.851
classification report:
              precision    recall  f1-score   support

        good       0.87      0.83      0.85      1001
     malware       0.83      0.88      0.85       999

    accuracy                           0.85      2000
   macro avg       0.85      0.85      0.85      2000
weighted avg       0.85      0.85      0.85      2000


================================================================================
Bagging Classifier lr
Training: 
BaggingClassifier(base_estimator=LogisticRegression(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lr 0.907
classification report:
              precision    recall  f1-score   support

        good       0.93      0.88      0.90      1001
     malware       0.88      0.94      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Bagging Classifier lda
Training: 
BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lda 0.8485
classification report:
              precision    recall  f1-score   support

        good       0.85      0.85      0.85      1001
     malware       0.85      0.84      0.85       999

    accuracy                           0.85      2000
   macro avg       0.85      0.85      0.85      2000
weighted avg       0.85      0.85      0.85      2000


================================================================================
GradientBoostingClassifier
Training: 
GradientBoostingClassifier()
The accuracy of classifying malware in test set GradientBoostingClassifier 0.911
classification report:
              precision    recall  f1-score   support

        good       0.96      0.86      0.91      1001
     malware       0.87      0.97      0.92       999

    accuracy                           0.91      2000
   macro avg       0.92      0.91      0.91      2000
weighted avg       0.92      0.91      0.91      2000


================================================================================
AdaBoostClassifier
Training: 
AdaBoostClassifier()
The accuracy of classifying malware in test set AdaBoostClassifier 0.893
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.91      0.90       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
StackingClassifier
Training: 
StackingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                               ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                               ('rf', RandomForestClassifier()),
                               ('dt', DecisionTreeClassifier()), ('svc', SVC()),
                               ('lr', LogisticRegression()),
                               ('knn', KNeighborsClassifier()),
                               ('lda', LinearDiscriminantAnalysis())],
                   n_jobs=10)
The accuracy of classifying malware in test set StackingClassifier 0.9265
classification report:
              precision    recall  f1-score   support

        good       0.94      0.91      0.93      1001
     malware       0.92      0.94      0.93       999

    accuracy                           0.93      2000
   macro avg       0.93      0.93      0.93      2000
weighted avg       0.93      0.93      0.93      2000


================================================================================
Vote
Training: 
VotingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                             ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                             ('rf', RandomForestClassifier()),
                             ('dt', DecisionTreeClassifier()),
                             ('svc', SVC(probability=True)),
                             ('lr', LogisticRegression()),
                             ('knn', KNeighborsClassifier()),
                             ('lda', LinearDiscriminantAnalysis())],
                 n_jobs=10, voting='soft',
                 weights=[1, 1, 1, 1, 5, 0, 1, 0, 1, 1])
The accuracy of classifying malware in test set Vote 0.9295
classification report:
              precision    recall  f1-score   support

        good       0.94      0.92      0.93      1001
     malware       0.92      0.94      0.93       999

    accuracy                           0.93      2000
   macro avg       0.93      0.93      0.93      2000
weighted avg       0.93      0.93      0.93      2000


[('MultinomialNB', 0.8945), ('GaussianNB', 0.8), ('BernoulliNB', 0.8555), ('ComplementNB', 0.8945), ('RandomForestClassifier', 0.917), ('DecisionTreeClassifier', 0.885), ('SVC', 0.9105), ('KNeighborsClassifier', 0.8505), ('LogisticRegression', 0.909), ('LinearDiscriminantAnalysis', 0.864), ('BaggingClassifier', 0.8935), ('BaggingClassifier', 0.8065), ('BaggingClassifier', 0.8505), ('BaggingClassifier', 0.896), ('BaggingClassifier', 0.9165), ('BaggingClassifier', 0.905), ('BaggingClassifier', 0.906), ('BaggingClassifier', 0.851), ('BaggingClassifier', 0.907), ('BaggingClassifier', 0.8485), ('GradientBoostingClassifier', 0.911), ('AdaBoostClassifier', 0.893), ('StackingClassifier', 0.9265), ('VotingClassifier', 0.9295)]
________________________________________________________________________________
two categories
tfidf
================================================================================
MultinomialNB Naive Bayes
Training: 
MultinomialNB()
The accuracy of classifying malware in test set MultinomialNB Naive Bayes 0.9125
classification report:
              precision    recall  f1-score   support

        good       0.93      0.89      0.91      1001
     malware       0.90      0.93      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
GaussianNB
Training: 
GaussianNB()
The accuracy of classifying malware in test set GaussianNB 0.8765
classification report:
              precision    recall  f1-score   support

        good       0.86      0.90      0.88      1001
     malware       0.89      0.86      0.87       999

    accuracy                           0.88      2000
   macro avg       0.88      0.88      0.88      2000
weighted avg       0.88      0.88      0.88      2000


================================================================================
BernoulliNB
Training: 
BernoulliNB()
The accuracy of classifying malware in test set BernoulliNB 0.884
classification report:
              precision    recall  f1-score   support

        good       0.88      0.88      0.88      1001
     malware       0.88      0.88      0.88       999

    accuracy                           0.88      2000
   macro avg       0.88      0.88      0.88      2000
weighted avg       0.88      0.88      0.88      2000


================================================================================
ComplementNB
Training: 
ComplementNB()
The accuracy of classifying malware in test set ComplementNB 0.9125
classification report:
              precision    recall  f1-score   support

        good       0.93      0.89      0.91      1001
     malware       0.90      0.93      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Random forest
Training: 
RandomForestClassifier(n_jobs=10, random_state=0)
The accuracy of classifying malware in test set Random forest 0.919
classification report:
              precision    recall  f1-score   support

        good       0.94      0.90      0.92      1001
     malware       0.90      0.94      0.92       999

    accuracy                           0.92      2000
   macro avg       0.92      0.92      0.92      2000
weighted avg       0.92      0.92      0.92      2000


================================================================================
Decision Tree
Training: 
DecisionTreeClassifier()
The accuracy of classifying malware in test set Decision Tree 0.876
classification report:
              precision    recall  f1-score   support

        good       0.88      0.87      0.88      1001
     malware       0.87      0.88      0.88       999

    accuracy                           0.88      2000
   macro avg       0.88      0.88      0.88      2000
weighted avg       0.88      0.88      0.88      2000


================================================================================
SVC
Training: 
SVC()
The accuracy of classifying malware in test set SVC 0.9295
classification report:
              precision    recall  f1-score   support

        good       0.96      0.90      0.93      1001
     malware       0.91      0.96      0.93       999

    accuracy                           0.93      2000
   macro avg       0.93      0.93      0.93      2000
weighted avg       0.93      0.93      0.93      2000


================================================================================
KNN
Training: 
KNeighborsClassifier(n_jobs=10)
The accuracy of classifying malware in test set KNN 0.8305
classification report:
              precision    recall  f1-score   support

        good       0.88      0.76      0.82      1001
     malware       0.79      0.90      0.84       999

    accuracy                           0.83      2000
   macro avg       0.84      0.83      0.83      2000
weighted avg       0.84      0.83      0.83      2000


================================================================================
Logistic Regression
Training: 
LogisticRegression(n_jobs=10)
The accuracy of classifying malware in test set Logistic Regression 0.9225
classification report:
              precision    recall  f1-score   support

        good       0.94      0.91      0.92      1001
     malware       0.91      0.94      0.92       999

    accuracy                           0.92      2000
   macro avg       0.92      0.92      0.92      2000
weighted avg       0.92      0.92      0.92      2000


================================================================================
Linear Discriminant Analysis
Training: 
LinearDiscriminantAnalysis()
The accuracy of classifying malware in test set Linear Discriminant Analysis 0.8895
classification report:
              precision    recall  f1-score   support

        good       0.88      0.90      0.89      1001
     malware       0.90      0.88      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier mnb
Training: 
BaggingClassifier(base_estimator=MultinomialNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier mnb 0.9125
classification report:
              precision    recall  f1-score   support

        good       0.93      0.89      0.91      1001
     malware       0.90      0.93      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Bagging Classifier gnb
Training: 
BaggingClassifier(base_estimator=GaussianNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier gnb 0.873
classification report:
              precision    recall  f1-score   support

        good       0.85      0.90      0.88      1001
     malware       0.90      0.84      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
Bagging Classifier bnb
Training: 
BaggingClassifier(base_estimator=BernoulliNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier bnb 0.8865
classification report:
              precision    recall  f1-score   support

        good       0.89      0.89      0.89      1001
     malware       0.89      0.89      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier cnb
Training: 
BaggingClassifier(base_estimator=ComplementNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier cnb 0.912
classification report:
              precision    recall  f1-score   support

        good       0.93      0.89      0.91      1001
     malware       0.90      0.93      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Bagging Classifier rf
Training: 
BaggingClassifier(base_estimator=RandomForestClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier rf 0.9175
classification report:
              precision    recall  f1-score   support

        good       0.94      0.89      0.92      1001
     malware       0.90      0.94      0.92       999

    accuracy                           0.92      2000
   macro avg       0.92      0.92      0.92      2000
weighted avg       0.92      0.92      0.92      2000


================================================================================
Bagging Classifier dt
Training: 
BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier dt 0.9005
classification report:
              precision    recall  f1-score   support

        good       0.90      0.90      0.90      1001
     malware       0.90      0.90      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Bagging Classifier svm
Training: 
BaggingClassifier(base_estimator=SVC(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier svm 0.9305
classification report:
              precision    recall  f1-score   support

        good       0.95      0.90      0.93      1001
     malware       0.91      0.96      0.93       999

    accuracy                           0.93      2000
   macro avg       0.93      0.93      0.93      2000
weighted avg       0.93      0.93      0.93      2000


================================================================================
Bagging Classifier knn
Training: 
BaggingClassifier(base_estimator=KNeighborsClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier knn 0.815
classification report:
              precision    recall  f1-score   support

        good       0.91      0.70      0.79      1001
     malware       0.76      0.93      0.83       999

    accuracy                           0.81      2000
   macro avg       0.83      0.82      0.81      2000
weighted avg       0.83      0.81      0.81      2000


================================================================================
Bagging Classifier lr
Training: 
BaggingClassifier(base_estimator=LogisticRegression(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lr 0.9225
classification report:
              precision    recall  f1-score   support

        good       0.94      0.90      0.92      1001
     malware       0.91      0.94      0.92       999

    accuracy                           0.92      2000
   macro avg       0.92      0.92      0.92      2000
weighted avg       0.92      0.92      0.92      2000


================================================================================
Bagging Classifier lda
Training: 
BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lda 0.8695
classification report:
              precision    recall  f1-score   support

        good       0.86      0.88      0.87      1001
     malware       0.88      0.85      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
GradientBoostingClassifier
Training: 
GradientBoostingClassifier()
The accuracy of classifying malware in test set GradientBoostingClassifier 0.9075
classification report:
              precision    recall  f1-score   support

        good       0.96      0.85      0.90      1001
     malware       0.87      0.96      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
AdaBoostClassifier
Training: 
AdaBoostClassifier()
The accuracy of classifying malware in test set AdaBoostClassifier 0.8935
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.91      0.90       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
StackingClassifier
Training: 
StackingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                               ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                               ('rf', RandomForestClassifier()),
                               ('dt', DecisionTreeClassifier()), ('svc', SVC()),
                               ('lr', LogisticRegression()),
                               ('knn', KNeighborsClassifier()),
                               ('lda', LinearDiscriminantAnalysis())],
                   n_jobs=10)
The accuracy of classifying malware in test set StackingClassifier 0.929
classification report:
              precision    recall  f1-score   support

        good       0.94      0.92      0.93      1001
     malware       0.92      0.94      0.93       999

    accuracy                           0.93      2000
   macro avg       0.93      0.93      0.93      2000
weighted avg       0.93      0.93      0.93      2000


================================================================================
Vote
Training: 
VotingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                             ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                             ('rf', RandomForestClassifier()),
                             ('dt', DecisionTreeClassifier()),
                             ('svc', SVC(probability=True)),
                             ('lr', LogisticRegression()),
                             ('knn', KNeighborsClassifier()),
                             ('lda', LinearDiscriminantAnalysis())],
                 n_jobs=10, voting='soft',
                 weights=[1, 1, 1, 1, 5, 0, 1, 0, 1, 1])
The accuracy of classifying malware in test set Vote 0.929
classification report:
              precision    recall  f1-score   support

        good       0.95      0.91      0.93      1001
     malware       0.91      0.95      0.93       999

    accuracy                           0.93      2000
   macro avg       0.93      0.93      0.93      2000
weighted avg       0.93      0.93      0.93      2000


[('MultinomialNB', 0.9125), ('GaussianNB', 0.8765), ('BernoulliNB', 0.884), ('ComplementNB', 0.9125), ('RandomForestClassifier', 0.919), ('DecisionTreeClassifier', 0.876), ('SVC', 0.9295), ('KNeighborsClassifier', 0.8305), ('LogisticRegression', 0.9225), ('LinearDiscriminantAnalysis', 0.8895), ('BaggingClassifier', 0.9125), ('BaggingClassifier', 0.873), ('BaggingClassifier', 0.8865), ('BaggingClassifier', 0.912), ('BaggingClassifier', 0.9175), ('BaggingClassifier', 0.9005), ('BaggingClassifier', 0.9305), ('BaggingClassifier', 0.815), ('BaggingClassifier', 0.9225), ('BaggingClassifier', 0.8695), ('GradientBoostingClassifier', 0.9075), ('AdaBoostClassifier', 0.8935), ('StackingClassifier', 0.929), ('VotingClassifier', 0.929)]
________________________________________________________________________________
two categories
word2vec based unweighted average
================================================================================
MultinomialNB Naive Bayes
Training: 
MultinomialNB()
The accuracy of classifying malware in test set MultinomialNB Naive Bayes 0.756
classification report:
              precision    recall  f1-score   support

        good       0.79      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.76      2000
   macro avg       0.76      0.76      0.76      2000
weighted avg       0.76      0.76      0.76      2000


================================================================================
GaussianNB
Training: 
GaussianNB()
The accuracy of classifying malware in test set GaussianNB 0.7885
classification report:
              precision    recall  f1-score   support

        good       0.85      0.70      0.77      1001
     malware       0.74      0.88      0.81       999

    accuracy                           0.79      2000
   macro avg       0.80      0.79      0.79      2000
weighted avg       0.80      0.79      0.79      2000


================================================================================
BernoulliNB
Training: 
BernoulliNB()
The accuracy of classifying malware in test set BernoulliNB 0.6345
classification report:
              precision    recall  f1-score   support

        good       0.86      0.32      0.47      1001
     malware       0.58      0.95      0.72       999

    accuracy                           0.63      2000
   macro avg       0.72      0.63      0.60      2000
weighted avg       0.72      0.63      0.60      2000


================================================================================
ComplementNB
Training: 
ComplementNB()
The accuracy of classifying malware in test set ComplementNB 0.756
classification report:
              precision    recall  f1-score   support

        good       0.79      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.76      2000
   macro avg       0.76      0.76      0.76      2000
weighted avg       0.76      0.76      0.76      2000


================================================================================
Random forest
Training: 
RandomForestClassifier(n_jobs=10, random_state=0)
The accuracy of classifying malware in test set Random forest 0.8925
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.87      0.92      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Decision Tree
Training: 
DecisionTreeClassifier()
The accuracy of classifying malware in test set Decision Tree 0.82
classification report:
              precision    recall  f1-score   support

        good       0.82      0.82      0.82      1001
     malware       0.82      0.82      0.82       999

    accuracy                           0.82      2000
   macro avg       0.82      0.82      0.82      2000
weighted avg       0.82      0.82      0.82      2000


================================================================================
SVC
Training: 
SVC()
The accuracy of classifying malware in test set SVC 0.901
classification report:
              precision    recall  f1-score   support

        good       0.93      0.87      0.90      1001
     malware       0.88      0.93      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
KNN
Training: 
KNeighborsClassifier(n_jobs=10)
The accuracy of classifying malware in test set KNN 0.869
classification report:
              precision    recall  f1-score   support

        good       0.89      0.84      0.87      1001
     malware       0.85      0.90      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
Logistic Regression
Training: 
LogisticRegression(n_jobs=10)
The accuracy of classifying malware in test set Logistic Regression 0.9025
classification report:
              precision    recall  f1-score   support

        good       0.92      0.88      0.90      1001
     malware       0.88      0.93      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Linear Discriminant Analysis
Training: 
LinearDiscriminantAnalysis()
The accuracy of classifying malware in test set Linear Discriminant Analysis 0.9085
classification report:
              precision    recall  f1-score   support

        good       0.94      0.87      0.91      1001
     malware       0.88      0.94      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Bagging Classifier mnb
Training: 
BaggingClassifier(base_estimator=MultinomialNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier mnb 0.7555
classification report:
              precision    recall  f1-score   support

        good       0.79      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.76      2000
   macro avg       0.76      0.76      0.75      2000
weighted avg       0.76      0.76      0.75      2000


================================================================================
Bagging Classifier gnb
Training: 
BaggingClassifier(base_estimator=GaussianNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier gnb 0.7895
classification report:
              precision    recall  f1-score   support

        good       0.86      0.70      0.77      1001
     malware       0.74      0.88      0.81       999

    accuracy                           0.79      2000
   macro avg       0.80      0.79      0.79      2000
weighted avg       0.80      0.79      0.79      2000


================================================================================
Bagging Classifier bnb
Training: 
BaggingClassifier(base_estimator=BernoulliNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier bnb 0.6345
classification report:
              precision    recall  f1-score   support

        good       0.86      0.32      0.47      1001
     malware       0.58      0.95      0.72       999

    accuracy                           0.63      2000
   macro avg       0.72      0.63      0.60      2000
weighted avg       0.72      0.63      0.60      2000


================================================================================
Bagging Classifier cnb
Training: 
BaggingClassifier(base_estimator=ComplementNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier cnb 0.7555
classification report:
              precision    recall  f1-score   support

        good       0.79      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.76      2000
   macro avg       0.76      0.76      0.75      2000
weighted avg       0.76      0.76      0.75      2000


================================================================================
Bagging Classifier rf
Training: 
BaggingClassifier(base_estimator=RandomForestClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier rf 0.8935
classification report:
              precision    recall  f1-score   support

        good       0.92      0.87      0.89      1001
     malware       0.87      0.92      0.90       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier dt
Training: 
BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier dt 0.877
classification report:
              precision    recall  f1-score   support

        good       0.88      0.88      0.88      1001
     malware       0.88      0.88      0.88       999

    accuracy                           0.88      2000
   macro avg       0.88      0.88      0.88      2000
weighted avg       0.88      0.88      0.88      2000


================================================================================
Bagging Classifier svm
Training: 
BaggingClassifier(base_estimator=SVC(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier svm 0.9035
classification report:
              precision    recall  f1-score   support

        good       0.93      0.88      0.90      1001
     malware       0.88      0.93      0.91       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Bagging Classifier knn
Training: 
BaggingClassifier(base_estimator=KNeighborsClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier knn 0.8775
classification report:
              precision    recall  f1-score   support

        good       0.90      0.85      0.87      1001
     malware       0.86      0.90      0.88       999

    accuracy                           0.88      2000
   macro avg       0.88      0.88      0.88      2000
weighted avg       0.88      0.88      0.88      2000


================================================================================
Bagging Classifier lr
Training: 
BaggingClassifier(base_estimator=LogisticRegression(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lr 0.9065
classification report:
              precision    recall  f1-score   support

        good       0.93      0.88      0.90      1001
     malware       0.89      0.93      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.91      2000
weighted avg       0.91      0.91      0.91      2000


================================================================================
Bagging Classifier lda
Training: 
BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lda 0.905
classification report:
              precision    recall  f1-score   support

        good       0.93      0.87      0.90      1001
     malware       0.88      0.94      0.91       999

    accuracy                           0.91      2000
   macro avg       0.91      0.91      0.90      2000
weighted avg       0.91      0.91      0.90      2000


================================================================================
GradientBoostingClassifier
Training: 
GradientBoostingClassifier()
The accuracy of classifying malware in test set GradientBoostingClassifier 0.902
classification report:
              precision    recall  f1-score   support

        good       0.91      0.89      0.90      1001
     malware       0.89      0.91      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
AdaBoostClassifier
Training: 
AdaBoostClassifier()
The accuracy of classifying malware in test set AdaBoostClassifier 0.8855
classification report:
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
              precision    recall  f1-score   support

        good       0.91      0.86      0.88      1001
     malware       0.87      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
StackingClassifier
Training: 
StackingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                               ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                               ('rf', RandomForestClassifier()),
                               ('dt', DecisionTreeClassifier()), ('svc', SVC()),
                               ('lr', LogisticRegression()),
                               ('knn', KNeighborsClassifier()),
                               ('lda', LinearDiscriminantAnalysis())],
                   n_jobs=10)
The accuracy of classifying malware in test set StackingClassifier 0.918
classification report:
              precision    recall  f1-score   support

        good       0.94      0.90      0.92      1001
     malware       0.90      0.94      0.92       999

    accuracy                           0.92      2000
   macro avg       0.92      0.92      0.92      2000
weighted avg       0.92      0.92      0.92      2000


================================================================================
Vote
Training: 
VotingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                             ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                             ('rf', RandomForestClassifier()),
                             ('dt', DecisionTreeClassifier()),
                             ('svc', SVC(probability=True)),
                             ('lr', LogisticRegression()),
                             ('knn', KNeighborsClassifier()),
                             ('lda', LinearDiscriminantAnalysis())],
                 n_jobs=10, voting='soft',
                 weights=[1, 1, 1, 1, 5, 0, 1, 0, 1, 1])
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
The accuracy of classifying malware in test set Vote 0.878
classification report:
              precision    recall  f1-score   support

        good       0.93      0.82      0.87      1001
     malware       0.84      0.94      0.88       999

    accuracy                           0.88      2000
   macro avg       0.88      0.88      0.88      2000
weighted avg       0.88      0.88      0.88      2000


[('MultinomialNB', 0.756), ('GaussianNB', 0.7885), ('BernoulliNB', 0.6345), ('ComplementNB', 0.756), ('RandomForestClassifier', 0.8925), ('DecisionTreeClassifier', 0.82), ('SVC', 0.901), ('KNeighborsClassifier', 0.869), ('LogisticRegression', 0.9025), ('LinearDiscriminantAnalysis', 0.9085), ('BaggingClassifier', 0.7555), ('BaggingClassifier', 0.7895), ('BaggingClassifier', 0.6345), ('BaggingClassifier', 0.7555), ('BaggingClassifier', 0.8935), ('BaggingClassifier', 0.877), ('BaggingClassifier', 0.9035), ('BaggingClassifier', 0.8775), ('BaggingClassifier', 0.9065), ('BaggingClassifier', 0.905), ('GradientBoostingClassifier', 0.902), ('AdaBoostClassifier', 0.8855), ('StackingClassifier', 0.918), ('VotingClassifier', 0.878)]
________________________________________________________________________________
two categories
word2vec based weighted average without pca
================================================================================
MultinomialNB Naive Bayes
Training: 
MultinomialNB()
The accuracy of classifying malware in test set MultinomialNB Naive Bayes 0.7455
classification report:
              precision    recall  f1-score   support

        good       0.78      0.68      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.75      2000
   macro avg       0.75      0.75      0.74      2000
weighted avg       0.75      0.75      0.74      2000


================================================================================
GaussianNB
Training: 
GaussianNB()
The accuracy of classifying malware in test set GaussianNB 0.7815
classification report:
              precision    recall  f1-score   support

        good       0.86      0.68      0.76      1001
     malware       0.73      0.89      0.80       999

    accuracy                           0.78      2000
   macro avg       0.79      0.78      0.78      2000
weighted avg       0.79      0.78      0.78      2000


================================================================================
BernoulliNB
Training: 
BernoulliNB()
The accuracy of classifying malware in test set BernoulliNB 0.6375
classification report:
              precision    recall  f1-score   support

        good       0.86      0.33      0.48      1001
     malware       0.58      0.94      0.72       999

    accuracy                           0.64      2000
   macro avg       0.72      0.64      0.60      2000
weighted avg       0.72      0.64      0.60      2000


================================================================================
ComplementNB
Training: 
ComplementNB()
The accuracy of classifying malware in test set ComplementNB 0.7455
classification report:
              precision    recall  f1-score   support

        good       0.78      0.68      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.75      2000
   macro avg       0.75      0.75      0.74      2000
weighted avg       0.75      0.75      0.74      2000


================================================================================
Random forest
Training: 
RandomForestClassifier(n_jobs=10, random_state=0)
The accuracy of classifying malware in test set Random forest 0.886
classification report:
              precision    recall  f1-score   support

        good       0.91      0.85      0.88      1001
     malware       0.86      0.92      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Decision Tree
Training: 
DecisionTreeClassifier()
The accuracy of classifying malware in test set Decision Tree 0.807
classification report:
              precision    recall  f1-score   support

        good       0.81      0.80      0.81      1001
     malware       0.80      0.81      0.81       999

    accuracy                           0.81      2000
   macro avg       0.81      0.81      0.81      2000
weighted avg       0.81      0.81      0.81      2000


================================================================================
SVC
Training: 
SVC()
The accuracy of classifying malware in test set SVC 0.8885
classification report:
              precision    recall  f1-score   support

        good       0.92      0.86      0.88      1001
     malware       0.86      0.92      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
KNN
Training: 
KNeighborsClassifier(n_jobs=10)
The accuracy of classifying malware in test set KNN 0.8625
classification report:
              precision    recall  f1-score   support

        good       0.88      0.84      0.86      1001
     malware       0.85      0.88      0.86       999

    accuracy                           0.86      2000
   macro avg       0.86      0.86      0.86      2000
weighted avg       0.86      0.86      0.86      2000


================================================================================
Logistic Regression
Training: 
LogisticRegression(n_jobs=10)
The accuracy of classifying malware in test set Logistic Regression 0.892
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.87      0.92      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Linear Discriminant Analysis
Training: 
LinearDiscriminantAnalysis()
The accuracy of classifying malware in test set Linear Discriminant Analysis 0.8955
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.92      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Bagging Classifier mnb
Training: 
BaggingClassifier(base_estimator=MultinomialNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier mnb 0.746
classification report:
              precision    recall  f1-score   support

        good       0.78      0.68      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.75      2000
   macro avg       0.75      0.75      0.74      2000
weighted avg       0.75      0.75      0.74      2000


================================================================================
Bagging Classifier gnb
Training: 
BaggingClassifier(base_estimator=GaussianNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier gnb 0.78
classification report:
              precision    recall  f1-score   support

        good       0.86      0.67      0.75      1001
     malware       0.73      0.89      0.80       999

    accuracy                           0.78      2000
   macro avg       0.79      0.78      0.78      2000
weighted avg       0.79      0.78      0.78      2000


================================================================================
Bagging Classifier bnb
Training: 
BaggingClassifier(base_estimator=BernoulliNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier bnb 0.6385
classification report:
              precision    recall  f1-score   support

        good       0.86      0.33      0.48      1001
     malware       0.59      0.94      0.72       999

    accuracy                           0.64      2000
   macro avg       0.72      0.64      0.60      2000
weighted avg       0.72      0.64      0.60      2000


================================================================================
Bagging Classifier cnb
Training: 
BaggingClassifier(base_estimator=ComplementNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier cnb 0.745
classification report:
              precision    recall  f1-score   support

        good       0.78      0.68      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.74      2000
   macro avg       0.75      0.75      0.74      2000
weighted avg       0.75      0.74      0.74      2000


================================================================================
Bagging Classifier rf
Training: 
BaggingClassifier(base_estimator=RandomForestClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier rf 0.8865
classification report:
              precision    recall  f1-score   support

        good       0.92      0.85      0.88      1001
     malware       0.86      0.92      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier dt
Training: 
BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier dt 0.8675
classification report:
              precision    recall  f1-score   support

        good       0.88      0.85      0.87      1001
     malware       0.86      0.88      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
Bagging Classifier svm
Training: 
BaggingClassifier(base_estimator=SVC(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier svm 0.885
classification report:
              precision    recall  f1-score   support

        good       0.91      0.86      0.88      1001
     malware       0.86      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.88      2000
weighted avg       0.89      0.89      0.88      2000


================================================================================
Bagging Classifier knn
Training: 
BaggingClassifier(base_estimator=KNeighborsClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier knn 0.8665
classification report:
              precision    recall  f1-score   support

        good       0.88      0.85      0.86      1001
     malware       0.85      0.88      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
Bagging Classifier lr
Training: 
BaggingClassifier(base_estimator=LogisticRegression(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lr 0.8955
classification report:
              precision    recall  f1-score   support

        good       0.92      0.87      0.89      1001
     malware       0.88      0.92      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Bagging Classifier lda
Training: 
BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lda 0.8965
classification report:
              precision    recall  f1-score   support

        good       0.91      0.88      0.89      1001
     malware       0.88      0.92      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
GradientBoostingClassifier
Training: 
GradientBoostingClassifier()
The accuracy of classifying malware in test set GradientBoostingClassifier 0.888
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.87      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
AdaBoostClassifier
Training: 
AdaBoostClassifier()
The accuracy of classifying malware in test set AdaBoostClassifier 0.8735
classification report:
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
              precision    recall  f1-score   support

        good       0.87      0.87      0.87      1001
     malware       0.87      0.87      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
StackingClassifier
Training: 
StackingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                               ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                               ('rf', RandomForestClassifier()),
                               ('dt', DecisionTreeClassifier()), ('svc', SVC()),
                               ('lr', LogisticRegression()),
                               ('knn', KNeighborsClassifier()),
                               ('lda', LinearDiscriminantAnalysis())],
                   n_jobs=10)
The accuracy of classifying malware in test set StackingClassifier 0.904
classification report:
              precision    recall  f1-score   support

        good       0.91      0.90      0.90      1001
     malware       0.90      0.91      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Vote
Training: 
VotingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                             ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                             ('rf', RandomForestClassifier()),
                             ('dt', DecisionTreeClassifier()),
                             ('svc', SVC(probability=True)),
                             ('lr', LogisticRegression()),
                             ('knn', KNeighborsClassifier()),
                             ('lda', LinearDiscriminantAnalysis())],
                 n_jobs=10, voting='soft',
                 weights=[1, 1, 1, 1, 5, 0, 1, 0, 1, 1])
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
The accuracy of classifying malware in test set Vote 0.867
classification report:
              precision    recall  f1-score   support

        good       0.92      0.80      0.86      1001
     malware       0.83      0.93      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


[('MultinomialNB', 0.7455), ('GaussianNB', 0.7815), ('BernoulliNB', 0.6375), ('ComplementNB', 0.7455), ('RandomForestClassifier', 0.886), ('DecisionTreeClassifier', 0.807), ('SVC', 0.8885), ('KNeighborsClassifier', 0.8625), ('LogisticRegression', 0.892), ('LinearDiscriminantAnalysis', 0.8955), ('BaggingClassifier', 0.746), ('BaggingClassifier', 0.78), ('BaggingClassifier', 0.6385), ('BaggingClassifier', 0.745), ('BaggingClassifier', 0.8865), ('BaggingClassifier', 0.8675), ('BaggingClassifier', 0.885), ('BaggingClassifier', 0.8665), ('BaggingClassifier', 0.8955), ('BaggingClassifier', 0.8965), ('GradientBoostingClassifier', 0.888), ('AdaBoostClassifier', 0.8735), ('StackingClassifier', 0.904), ('VotingClassifier', 0.867)]
________________________________________________________________________________
two categories
word2vec based weighted average with pca
================================================================================
MultinomialNB Naive Bayes
Training: 
MultinomialNB()
The accuracy of classifying malware in test set MultinomialNB Naive Bayes 0.7465
classification report:
              precision    recall  f1-score   support

        good       0.78      0.68      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.75      2000
   macro avg       0.75      0.75      0.75      2000
weighted avg       0.75      0.75      0.75      2000


================================================================================
GaussianNB
Training: 
GaussianNB()
The accuracy of classifying malware in test set GaussianNB 0.7805
classification report:
              precision    recall  f1-score   support

        good       0.86      0.68      0.75      1001
     malware       0.73      0.89      0.80       999

    accuracy                           0.78      2000
   macro avg       0.79      0.78      0.78      2000
weighted avg       0.79      0.78      0.78      2000


================================================================================
BernoulliNB
Training: 
BernoulliNB()
The accuracy of classifying malware in test set BernoulliNB 0.6375
classification report:
              precision    recall  f1-score   support

        good       0.86      0.33      0.48      1001
     malware       0.58      0.94      0.72       999

    accuracy                           0.64      2000
   macro avg       0.72      0.64      0.60      2000
weighted avg       0.72      0.64      0.60      2000


================================================================================
ComplementNB
Training: 
ComplementNB()
The accuracy of classifying malware in test set ComplementNB 0.7465
classification report:
              precision    recall  f1-score   support

        good       0.78      0.68      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.75      2000
   macro avg       0.75      0.75      0.75      2000
weighted avg       0.75      0.75      0.75      2000


================================================================================
Random forest
Training: 
RandomForestClassifier(n_jobs=10, random_state=0)
The accuracy of classifying malware in test set Random forest 0.879
classification report:
              precision    recall  f1-score   support

        good       0.90      0.85      0.88      1001
     malware       0.86      0.91      0.88       999

    accuracy                           0.88      2000
   macro avg       0.88      0.88      0.88      2000
weighted avg       0.88      0.88      0.88      2000


================================================================================
Decision Tree
Training: 
DecisionTreeClassifier()
The accuracy of classifying malware in test set Decision Tree 0.801
classification report:
              precision    recall  f1-score   support

        good       0.81      0.79      0.80      1001
     malware       0.80      0.81      0.80       999

    accuracy                           0.80      2000
   macro avg       0.80      0.80      0.80      2000
weighted avg       0.80      0.80      0.80      2000


================================================================================
SVC
Training: 
SVC()
The accuracy of classifying malware in test set SVC 0.892
classification report:
              precision    recall  f1-score   support

        good       0.92      0.86      0.89      1001
     malware       0.87      0.92      0.90       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
KNN
Training: 
KNeighborsClassifier(n_jobs=10)
The accuracy of classifying malware in test set KNN 0.8615
classification report:
              precision    recall  f1-score   support

        good       0.87      0.85      0.86      1001
     malware       0.85      0.87      0.86       999

    accuracy                           0.86      2000
   macro avg       0.86      0.86      0.86      2000
weighted avg       0.86      0.86      0.86      2000


================================================================================
Logistic Regression
Training: 
LogisticRegression(n_jobs=10)
The accuracy of classifying malware in test set Logistic Regression 0.8945
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.92      0.90       999

    accuracy                           0.89      2000
   macro avg       0.90      0.89      0.89      2000
weighted avg       0.90      0.89      0.89      2000


================================================================================
Linear Discriminant Analysis
Training: 
LinearDiscriminantAnalysis()
The accuracy of classifying malware in test set Linear Discriminant Analysis 0.8995
classification report:
              precision    recall  f1-score   support

        good       0.92      0.88      0.90      1001
     malware       0.88      0.92      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Bagging Classifier mnb
Training: 
BaggingClassifier(base_estimator=MultinomialNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier mnb 0.7475
classification report:
              precision    recall  f1-score   support

        good       0.78      0.69      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.75      2000
   macro avg       0.75      0.75      0.75      2000
weighted avg       0.75      0.75      0.75      2000


================================================================================
Bagging Classifier gnb
Training: 
BaggingClassifier(base_estimator=GaussianNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier gnb 0.78
classification report:
              precision    recall  f1-score   support

        good       0.86      0.67      0.75      1001
     malware       0.73      0.89      0.80       999

    accuracy                           0.78      2000
   macro avg       0.79      0.78      0.78      2000
weighted avg       0.79      0.78      0.78      2000


================================================================================
Bagging Classifier bnb
Training: 
BaggingClassifier(base_estimator=BernoulliNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier bnb 0.6375
classification report:
              precision    recall  f1-score   support

        good       0.86      0.33      0.48      1001
     malware       0.58      0.94      0.72       999

    accuracy                           0.64      2000
   macro avg       0.72      0.64      0.60      2000
weighted avg       0.72      0.64      0.60      2000


================================================================================
Bagging Classifier cnb
Training: 
BaggingClassifier(base_estimator=ComplementNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier cnb 0.747
classification report:
              precision    recall  f1-score   support

        good       0.78      0.69      0.73      1001
     malware       0.72      0.81      0.76       999

    accuracy                           0.75      2000
   macro avg       0.75      0.75      0.75      2000
weighted avg       0.75      0.75      0.75      2000


================================================================================
Bagging Classifier rf
Training: 
BaggingClassifier(base_estimator=RandomForestClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier rf 0.885
classification report:
              precision    recall  f1-score   support

        good       0.91      0.85      0.88      1001
     malware       0.86      0.92      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.88      2000
weighted avg       0.89      0.89      0.88      2000


================================================================================
Bagging Classifier dt
Training: 
BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier dt 0.865
classification report:
              precision    recall  f1-score   support

        good       0.87      0.86      0.86      1001
     malware       0.86      0.87      0.87       999

    accuracy                           0.86      2000
   macro avg       0.87      0.87      0.86      2000
weighted avg       0.87      0.86      0.86      2000


================================================================================
Bagging Classifier svm
Training: 
BaggingClassifier(base_estimator=SVC(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier svm 0.886
classification report:
              precision    recall  f1-score   support

        good       0.91      0.86      0.88      1001
     malware       0.87      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier knn
Training: 
BaggingClassifier(base_estimator=KNeighborsClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier knn 0.8585
classification report:
              precision    recall  f1-score   support

        good       0.87      0.85      0.86      1001
     malware       0.85      0.87      0.86       999

    accuracy                           0.86      2000
   macro avg       0.86      0.86      0.86      2000
weighted avg       0.86      0.86      0.86      2000


================================================================================
Bagging Classifier lr
Training: 
BaggingClassifier(base_estimator=LogisticRegression(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lr 0.892
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier lda
Training: 
BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lda 0.895
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.92      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.89      2000
weighted avg       0.90      0.90      0.89      2000


================================================================================
GradientBoostingClassifier
Training: 
GradientBoostingClassifier()
The accuracy of classifying malware in test set GradientBoostingClassifier 0.89
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
AdaBoostClassifier
Training: 
AdaBoostClassifier()
The accuracy of classifying malware in test set AdaBoostClassifier 0.8695
classification report:
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
              precision    recall  f1-score   support

        good       0.88      0.86      0.87      1001
     malware       0.86      0.88      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
StackingClassifier
Training: 
StackingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                               ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                               ('rf', RandomForestClassifier()),
                               ('dt', DecisionTreeClassifier()), ('svc', SVC()),
                               ('lr', LogisticRegression()),
                               ('knn', KNeighborsClassifier()),
                               ('lda', LinearDiscriminantAnalysis())],
                   n_jobs=10)
The accuracy of classifying malware in test set StackingClassifier 0.903
classification report:
              precision    recall  f1-score   support

        good       0.91      0.89      0.90      1001
     malware       0.89      0.91      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Vote
Training: 
VotingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                             ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                             ('rf', RandomForestClassifier()),
                             ('dt', DecisionTreeClassifier()),
                             ('svc', SVC(probability=True)),
                             ('lr', LogisticRegression()),
                             ('knn', KNeighborsClassifier()),
                             ('lda', LinearDiscriminantAnalysis())],
                 n_jobs=10, voting='soft',
                 weights=[1, 1, 1, 1, 5, 0, 1, 0, 1, 1])
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
The accuracy of classifying malware in test set Vote 0.8665
classification report:
              precision    recall  f1-score   support

        good       0.92      0.80      0.86      1001
     malware       0.83      0.93      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


[('MultinomialNB', 0.7465), ('GaussianNB', 0.7805), ('BernoulliNB', 0.6375), ('ComplementNB', 0.7465), ('RandomForestClassifier', 0.879), ('DecisionTreeClassifier', 0.801), ('SVC', 0.892), ('KNeighborsClassifier', 0.8615), ('LogisticRegression', 0.8945), ('LinearDiscriminantAnalysis', 0.8995), ('BaggingClassifier', 0.7475), ('BaggingClassifier', 0.78), ('BaggingClassifier', 0.6375), ('BaggingClassifier', 0.747), ('BaggingClassifier', 0.885), ('BaggingClassifier', 0.865), ('BaggingClassifier', 0.886), ('BaggingClassifier', 0.8585), ('BaggingClassifier', 0.892), ('BaggingClassifier', 0.895), ('GradientBoostingClassifier', 0.89), ('AdaBoostClassifier', 0.8695), ('StackingClassifier', 0.903), ('VotingClassifier', 0.8665)]
________________________________________________________________________________
two categories
fast_text
================================================================================
MultinomialNB Naive Bayes
Training: 
MultinomialNB()
The accuracy of classifying malware in test set MultinomialNB Naive Bayes 0.7525
classification report:
              precision    recall  f1-score   support

        good       0.78      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.75      2000
   macro avg       0.76      0.75      0.75      2000
weighted avg       0.76      0.75      0.75      2000


================================================================================
GaussianNB
Training: 
GaussianNB()
The accuracy of classifying malware in test set GaussianNB 0.787
classification report:
              precision    recall  f1-score   support

        good       0.86      0.68      0.76      1001
     malware       0.74      0.89      0.81       999

    accuracy                           0.79      2000
   macro avg       0.80      0.79      0.78      2000
weighted avg       0.80      0.79      0.78      2000


================================================================================
BernoulliNB
Training: 
BernoulliNB()
The accuracy of classifying malware in test set BernoulliNB 0.6325
classification report:
              precision    recall  f1-score   support

        good       0.87      0.31      0.46      1001
     malware       0.58      0.95      0.72       999

    accuracy                           0.63      2000
   macro avg       0.72      0.63      0.59      2000
weighted avg       0.72      0.63      0.59      2000


================================================================================
ComplementNB
Training: 
ComplementNB()
The accuracy of classifying malware in test set ComplementNB 0.7525
classification report:
              precision    recall  f1-score   support

        good       0.78      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.75      2000
   macro avg       0.76      0.75      0.75      2000
weighted avg       0.76      0.75      0.75      2000


================================================================================
Random forest
Training: 
RandomForestClassifier(n_jobs=10, random_state=0)
The accuracy of classifying malware in test set Random forest 0.8895
classification report:
              precision    recall  f1-score   support

        good       0.90      0.87      0.89      1001
     malware       0.88      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Decision Tree
Training: 
DecisionTreeClassifier()
The accuracy of classifying malware in test set Decision Tree 0.837
classification report:
              precision    recall  f1-score   support

        good       0.83      0.85      0.84      1001
     malware       0.84      0.83      0.84       999

    accuracy                           0.84      2000
   macro avg       0.84      0.84      0.84      2000
weighted avg       0.84      0.84      0.84      2000


================================================================================
SVC
Training: 
SVC()
The accuracy of classifying malware in test set SVC 0.892
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.87      0.92      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
KNN
Training: 
KNeighborsClassifier(n_jobs=10)
The accuracy of classifying malware in test set KNN 0.8585
classification report:
              precision    recall  f1-score   support

        good       0.88      0.83      0.85      1001
     malware       0.84      0.89      0.86       999

    accuracy                           0.86      2000
   macro avg       0.86      0.86      0.86      2000
weighted avg       0.86      0.86      0.86      2000


================================================================================
Logistic Regression
Training: 
LogisticRegression(n_jobs=10)
The accuracy of classifying malware in test set Logistic Regression 0.889
classification report:
              precision    recall  f1-score   support

        good       0.90      0.88      0.89      1001
     malware       0.88      0.90      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Linear Discriminant Analysis
Training: 
LinearDiscriminantAnalysis()
The accuracy of classifying malware in test set Linear Discriminant Analysis 0.895
classification report:
              precision    recall  f1-score   support

        good       0.92      0.87      0.89      1001
     malware       0.88      0.92      0.90       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.89      2000
weighted avg       0.90      0.90      0.89      2000


================================================================================
Bagging Classifier mnb
Training: 
BaggingClassifier(base_estimator=MultinomialNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier mnb 0.752
classification report:
              precision    recall  f1-score   support

        good       0.78      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.75      2000
   macro avg       0.76      0.75      0.75      2000
weighted avg       0.76      0.75      0.75      2000


================================================================================
Bagging Classifier gnb
Training: 
BaggingClassifier(base_estimator=GaussianNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier gnb 0.7865
classification report:
              precision    recall  f1-score   support

        good       0.86      0.68      0.76      1001
     malware       0.74      0.89      0.81       999

    accuracy                           0.79      2000
   macro avg       0.80      0.79      0.78      2000
weighted avg       0.80      0.79      0.78      2000


================================================================================
Bagging Classifier bnb
Training: 
BaggingClassifier(base_estimator=BernoulliNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier bnb 0.6315
classification report:
              precision    recall  f1-score   support

        good       0.86      0.31      0.46      1001
     malware       0.58      0.95      0.72       999

    accuracy                           0.63      2000
   macro avg       0.72      0.63      0.59      2000
weighted avg       0.72      0.63      0.59      2000


================================================================================
Bagging Classifier cnb
Training: 
BaggingClassifier(base_estimator=ComplementNB(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier cnb 0.7525
classification report:
              precision    recall  f1-score   support

        good       0.79      0.70      0.74      1001
     malware       0.73      0.81      0.77       999

    accuracy                           0.75      2000
   macro avg       0.76      0.75      0.75      2000
weighted avg       0.76      0.75      0.75      2000


================================================================================
Bagging Classifier rf
Training: 
BaggingClassifier(base_estimator=RandomForestClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier rf 0.8875
classification report:
              precision    recall  f1-score   support

        good       0.90      0.87      0.89      1001
     malware       0.87      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier dt
Training: 
BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier dt 0.867
classification report:
              precision    recall  f1-score   support

        good       0.86      0.88      0.87      1001
     malware       0.87      0.86      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
Bagging Classifier svm
Training: 
BaggingClassifier(base_estimator=SVC(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier svm 0.8915
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier knn
Training: 
BaggingClassifier(base_estimator=KNeighborsClassifier(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier knn 0.868
classification report:
              precision    recall  f1-score   support

        good       0.89      0.84      0.86      1001
     malware       0.85      0.89      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
Bagging Classifier lr
Training: 
BaggingClassifier(base_estimator=LogisticRegression(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lr 0.89
classification report:
              precision    recall  f1-score   support

        good       0.90      0.88      0.89      1001
     malware       0.88      0.90      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
Bagging Classifier lda
Training: 
BaggingClassifier(base_estimator=LinearDiscriminantAnalysis(), n_jobs=10)
The accuracy of classifying malware in test set Bagging Classifier lda 0.8905
classification report:
              precision    recall  f1-score   support

        good       0.91      0.87      0.89      1001
     malware       0.88      0.91      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
GradientBoostingClassifier
Training: 
GradientBoostingClassifier()
The accuracy of classifying malware in test set GradientBoostingClassifier 0.893
classification report:
              precision    recall  f1-score   support

        good       0.90      0.88      0.89      1001
     malware       0.88      0.90      0.89       999

    accuracy                           0.89      2000
   macro avg       0.89      0.89      0.89      2000
weighted avg       0.89      0.89      0.89      2000


================================================================================
AdaBoostClassifier
Training: 
AdaBoostClassifier()
The accuracy of classifying malware in test set AdaBoostClassifier 0.87
classification report:
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
              precision    recall  f1-score   support

        good       0.87      0.86      0.87      1001
     malware       0.87      0.88      0.87       999

    accuracy                           0.87      2000
   macro avg       0.87      0.87      0.87      2000
weighted avg       0.87      0.87      0.87      2000


================================================================================
StackingClassifier
Training: 
StackingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                               ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                               ('rf', RandomForestClassifier()),
                               ('dt', DecisionTreeClassifier()), ('svc', SVC()),
                               ('lr', LogisticRegression()),
                               ('knn', KNeighborsClassifier()),
                               ('lda', LinearDiscriminantAnalysis())],
                   n_jobs=10)
The accuracy of classifying malware in test set StackingClassifier 0.904
classification report:
              precision    recall  f1-score   support

        good       0.91      0.89      0.90      1001
     malware       0.89      0.92      0.91       999

    accuracy                           0.90      2000
   macro avg       0.90      0.90      0.90      2000
weighted avg       0.90      0.90      0.90      2000


================================================================================
Vote
Training: 
VotingClassifier(estimators=[('mnb', MultinomialNB()), ('gnb', GaussianNB()),
                             ('bnb', BernoulliNB()), ('cnb', ComplementNB()),
                             ('rf', RandomForestClassifier()),
                             ('dt', DecisionTreeClassifier()),
                             ('svc', SVC(probability=True)),
                             ('lr', LogisticRegression()),
                             ('knn', KNeighborsClassifier()),
                             ('lda', LinearDiscriminantAnalysis())],
                 n_jobs=10, voting='soft',
                 weights=[1, 1, 1, 1, 5, 0, 1, 0, 1, 1])
The accuracy of classifying malware in test set Vote 0.865
classification report:
              precision    recall  f1-score   support

        good       0.91      0.81      0.86      1001
     malware       0.83      0.92      0.87       999

    accuracy                           0.86      2000
   macro avg       0.87      0.87      0.86      2000
weighted avg       0.87      0.86      0.86      2000


[('MultinomialNB', 0.7525), ('GaussianNB', 0.787), ('BernoulliNB', 0.6325), ('ComplementNB', 0.7525), ('RandomForestClassifier', 0.8895), ('DecisionTreeClassifier', 0.837), ('SVC', 0.892), ('KNeighborsClassifier', 0.8585), ('LogisticRegression', 0.889), ('LinearDiscriminantAnalysis', 0.895), ('BaggingClassifier', 0.752), ('BaggingClassifier', 0.7865), ('BaggingClassifier', 0.6315), ('BaggingClassifier', 0.7525), ('BaggingClassifier', 0.8875), ('BaggingClassifier', 0.867), ('BaggingClassifier', 0.8915), ('BaggingClassifier', 0.868), ('BaggingClassifier', 0.89), ('BaggingClassifier', 0.8905), ('GradientBoostingClassifier', 0.893), ('AdaBoostClassifier', 0.87), ('StackingClassifier', 0.904), ('VotingClassifier', 0.865)]
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
/mnt/WangchengTao/tools/anaconda3/envs/dl/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
